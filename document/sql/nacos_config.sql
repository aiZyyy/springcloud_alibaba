/*
 Navicat Premium Data Transfer

 Source Server         : 本机(56)
 Source Server Type    : MySQL
 Source Server Version : 50730
 Source Host           : localhost:3306
 Source Schema         : nacos_config

 Target Server Type    : MySQL
 Target Server Version : 50730
 File Encoding         : 65001

 Date: 28/09/2020 14:56:21
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 57 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (4, 'api-gateway-local.yaml', 'DEFAULT_GROUP', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8999}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n      filters:\r\n        - StripPrefix=1\r\n          # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route\r\n          default-filters:\r\n            # 重试\r\n              - name: Retry\r\n              args:\r\n                retries: 3\r\n                statuses: BAD_GATEWAY\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7d4d63dc463896c3d45a5b1955f75622', '2020-09-08 15:26:48', '2020-09-08 17:20:52', NULL, '172.16.22.56', '', '89357605-6ea1-4627-a85b-4c2069d96474', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (15, 'application.yaml', 'DEFAULT_GROUP', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '57e7a872e6957898da2381e512fa52c2', '2020-09-10 11:49:27', '2020-09-10 11:49:27', NULL, '0:0:0:0:0:0:0:1', '', '89357605-6ea1-4627-a85b-4c2069d96474', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (16, 'snowflake-service.yaml', 'DEFAULT_GROUP', 'server.port: 8201\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://localhost:3306/snowflake?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: dev.mongodb.i.sixi.com\r\n      host: dev.mongodb.i.sixi.com\r\n      port: 27017\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6397\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: 127.0.0.1\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n    listener:\r\n      simple:\r\n        concurrency: 500\r\n        max-concurrency: 1000\r\n        acknowledge-mode: MANUAL', '0323d1c720a2a29240a0907f2adb2cdb', '2020-09-10 11:51:18', '2020-09-10 14:13:44', NULL, '0:0:0:0:0:0:0:1', '', '89357605-6ea1-4627-a85b-4c2069d96474', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (25, 'demo-nacos-config-share.yml', 'DEFAULT_GROUP', 'server:\r\n    port: ${zy-micro-services.ports.demo-nacos-config-share:0}\r\nnacos: \r\n    share: nacos-config-share', '24e1604bb4337d93a735a51f5ef14708', '2020-09-10 16:07:33', '2020-09-18 11:32:58', NULL, '0:0:0:0:0:0:0:1', '', '', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (26, 'demo-nacos-config-share.yml', 'DEFAULT_GROUP', 'server:\r\n    port: 9984\r\nnacos: \r\n    share: nacos-config-share', '3a18af89d318d7d0bbf72a40d2647c0b', '2020-09-10 16:47:54', '2020-09-10 16:47:54', NULL, '0:0:0:0:0:0:0:1', '', '317fcfa2-5e10-438a-b220-a5de3b05862b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (44, 'snowflake-service.yml', 'DEFAULT_GROUP', 'server.port: ${zy-micro-services.ports.snowflake-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.snowflake-service:sys}', 'e3d0d1d23f7e9881c5a6c10cf96f6c95', '2020-09-18 15:12:38', '2020-09-18 15:12:38', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (45, 'demo-client-service.yml', 'DEFAULT_GROUP', 'server:\r\n    port: ${zy-micro-services.ports.demo-client-service:0}', '1bbcfd4c6ff2c039c8ba00f9a3239b98', '2020-09-22 11:11:54', '2020-09-22 11:11:54', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (47, 'application.yml', 'COMMON_CONFIG', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-zuul: 8080\r\n    discovery-service: 8081\r\n    config-service: 8082\r\n    #路由服务\r\n    gateway-marker-service: 8100\r\n    gateway-route-service: 8101\r\n    gateway-service: 8102\r\n    #kits服务\r\n    snowflake-service: 8200\r\n    #demo\r\n    demo-nacos-config-share: 9000\r\n    demo-client-service: 9001\r\n  # 数据库\r\n  database:\r\n    gateway-route-service: gateway_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-zuul: gateway\r\n    discovery-service: discovery\r\n    config-service: config\r\n  ports:\r\n    api-zuul: 8080\r\n    discovery-service: 8081\r\n    config-service: 8082\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-zuul}:${zy-micro-service.ports.api-zuul}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '33336964f9c80438bec82197cd55e5e0', '2020-09-28 10:37:41', '2020-09-28 14:28:01', NULL, '0:0:0:0:0:0:0:1', '', '', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (48, 'application-dev.yml', 'COMMON_CONFIG', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '593e04d985513d2f4a1d4695d8ccc8e3', '2020-09-28 10:39:46', '2020-09-28 10:39:46', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (50, 'application-local.yml', 'COMMON_CONFIG', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', 'e2741b3684e45ca261d155111664f18a', '2020-09-28 10:40:48', '2020-09-28 10:40:48', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (51, 'application-prod.yml', 'COMMON_CONFIG', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.zy.com', 'a65f7f2812fa1289f912f6aa1c587533', '2020-09-28 10:41:55', '2020-09-28 10:41:55', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (52, 'application-test.yml', 'COMMON_CONFIG', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: test.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: test.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: test.mongodb.i.zy.com', '693297e3be1e77ae8c46dc2b23341547', '2020-09-28 10:42:17', '2020-09-28 10:42:17', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (54, 'api-zuul.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8080\r\n\r\nzuul:\r\n  # 添加代理的相关头信息\r\n  add-proxy-headers: true\r\n  # 代理时需要过滤的Header头 默认值为: \"Cookie\", \"Set-Cookie\", \"Authorization\"\r\n  # 留空代表传递所有的头\r\n  sensitive-headers:\r\n# security:\r\n#   oauth2:\r\n#     client:\r\n#       access-token-uri: http://${sixi-micro-service.hosts.api-gateway}:${sixi-micro-service.ports.api-gateway}/auth/oauth/token\r\n#       user-authorization-uri: http://${sixi-micro-service.hosts.api-gateway}:${sixi-micro-service.ports.api-gateway}/auth/oauth/authorize\r\n#       client-id: client\r\n#       client-secret: secret\r\n#     resource:\r\n#       token-info-uri:  http://${sixi-micro-service.hosts.oauth-service}:${sixi-micro-service.ports.oauth-service}/oauth/check_token\r\nfallback:\r\n  message: \'{\"status\":503, \"msg\":\"服务暂时不可用 请稍候重试!\"}\'', 'bf30b50e28cf8c933e4d2a55c374387c', '2020-09-28 11:53:38', '2020-09-28 11:53:38', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (56, 'gateway-route-service.yml', 'DEFAULT_GROUP', 'server.port: ${zy-micro-services.ports.gateway-route-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.gateway-route-service:sys}', '84e01bb55ed4afd4e269f810286d4eca', '2020-09-28 14:28:35', '2020-09-28 14:28:35', NULL, '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 73 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 1, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-zuul: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-zuul: zuul\r\n  ports:\r\n    api-zuul: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-zuul}:${zy-micro-service.ports.api-zuul}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n      config:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n        file-extension: yaml\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '4440d7640564e775a568adbfb6d5cb85', '2010-05-05 00:00:00', '2020-09-08 09:22:19', NULL, '172.16.22.56', 'I', '');
INSERT INTO `his_config_info` VALUES (1, 2, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-zuul: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-zuul: zuul\r\n  ports:\r\n    api-zuul: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-zuul}:${zy-micro-service.ports.api-zuul}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n      config:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n        file-extension: yaml\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '4440d7640564e775a568adbfb6d5cb85', '2010-05-05 00:00:00', '2020-09-08 09:23:59', NULL, '172.16.22.56', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 3, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-zuul: 8999\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-zuul: zuul\r\n  ports:\r\n    api-zuul: 8999\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-zuul}:${zy-micro-service.ports.api-zuul}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n      config:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n        file-extension: yaml\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '79011daf4ff26d4cc0aef62039b0039f', '2010-05-05 00:00:00', '2020-09-08 15:15:26', NULL, '172.16.22.56', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 4, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8080}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n        filters:\r\n          - StripPrefix=1\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7df4526bc3a2eecb47708d1e7df5bfb3', '2010-05-05 00:00:00', '2020-09-08 15:26:48', NULL, '172.16.22.56', 'I', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (1, 5, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n      config:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\n        file-extension: yaml\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '19ff89ae1a8854eb486dd6985c219316', '2010-05-05 00:00:00', '2020-09-08 15:33:19', NULL, '172.16.22.56', 'U', '');
INSERT INTO `his_config_info` VALUES (4, 6, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8080}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n        filters:\r\n          - StripPrefix=1\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7df4526bc3a2eecb47708d1e7df5bfb3', '2010-05-05 00:00:00', '2020-09-08 15:34:02', NULL, '172.16.22.56', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (1, 7, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '9f47f855756ec63831b698c2d090149f', '2010-05-05 00:00:00', '2020-09-08 15:38:38', NULL, '172.16.22.56', 'U', '');
INSERT INTO `his_config_info` VALUES (4, 8, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8080}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n      filters:\r\n        - StripPrefix=1\r\n          # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route\r\n          default-filters:\r\n            # 重试\r\n              - name: Retry\r\n              args:\r\n                retries: 3\r\n                statuses: BAD_GATEWAY\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '239b5d3d30cd083fcaad383b6dbf9375', '2010-05-05 00:00:00', '2020-09-08 15:40:14', NULL, '172.16.22.56', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (1, 9, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8999\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8999\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'e00d0f95a604b8a5a1aaf65184cf319b', '2010-05-05 00:00:00', '2020-09-08 15:40:34', NULL, '172.16.22.56', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 10, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '9f47f855756ec63831b698c2d090149f', '2010-05-05 00:00:00', '2020-09-08 15:46:37', NULL, '172.16.22.56', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 11, 'common-configuration.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '9f47f855756ec63831b698c2d090149f', '2010-05-05 00:00:00', '2020-09-08 15:47:13', NULL, '172.16.22.56', 'I', '');
INSERT INTO `his_config_info` VALUES (10, 12, 'common-configuration.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\n#zy-micro-service-security:\r\n#  browser:\r\n#    loginPage: ${zy-micro-service-common.oauth.loginPage}\r\n#    qyWechatRedirectUri: ${zy-micro-service-common.oauth.url}\r\n\r\n# 微服务第三方服务配置\r\n#zy-micro-service-third:\r\n#  wechat:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID:${zy_MICRO_SERVICE_THIRD_WECHAT_APP_ID}}\r\n#    secret: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_SECRET:${zy_MICRO_SERVICE_THIRD_WECHAT_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_WECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_WECHAT_ENCODING_AES_KEY}}\r\n#  qywechat:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHAT_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHAT_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHAT_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHAT_ENCODING_AES_KEY}}\r\n#  qywechatmail:\r\n#    corp-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_ID}}\r\n#    agent-id: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_AGENT_ID}}\r\n#    corp-secret: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_CORP_SECRET}}\r\n#    token: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_TOKEN}}\r\n#    encoding-aes-key: ${ENV_zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY:${zy_MICRO_SERVICE_THIRD_QYWECHATMAIL_ENCODING_AES_KEY}}\r\n#  alipay:\r\n#    app-id: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID:${zy_MICRO_SERVICE_THIRD_ALIPAY_APP_ID}}\r\n#    private-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_PRIVATE_KEY}}\r\n#    ali_public-key: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_PUBLIC_KEY}}\r\n#    alipayUrl: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_ALIPAY_URL}}\r\n#    callbackUri: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL:${zy_MICRO_SERVICE_THIRD_ALIPAY_CALLBACK_URL}}\r\n#    scop: ${ENV_zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP:${zy_MICRO_SERVICE_THIRD_ALIPAY_SCOP}}\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonConfiguration\r\n  # org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  # 启用okhttp\r\n  # org.springframework.cloud.netflix.feign.ribbon.OkHttpFeignLoadBalancedConfiguration\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '9f47f855756ec63831b698c2d090149f', '2010-05-05 00:00:00', '2020-09-08 17:20:04', NULL, '172.16.22.56', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 13, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'ef1915410a657803b01b2d54ca67ab7e', '2010-05-05 00:00:00', '2020-09-08 17:20:31', NULL, '172.16.22.56', 'I', '');
INSERT INTO `his_config_info` VALUES (4, 14, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8999}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n      filters:\r\n        - StripPrefix=1\r\n          # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route\r\n          default-filters:\r\n            # 重试\r\n              - name: Retry\r\n              args:\r\n                retries: 3\r\n                statuses: BAD_GATEWAY\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7d4d63dc463896c3d45a5b1955f75622', '2010-05-05 00:00:00', '2020-09-08 17:20:52', NULL, '172.16.22.56', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (11, 15, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    gateway-service: 8085\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'ef1915410a657803b01b2d54ca67ab7e', '2010-05-05 00:00:00', '2020-09-10 10:20:47', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 16, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8999}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n      filters:\r\n        - StripPrefix=1\r\n          # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route\r\n          default-filters:\r\n            # 重试\r\n              - name: Retry\r\n              args:\r\n                retries: 3\r\n                statuses: BAD_GATEWAY\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7d4d63dc463896c3d45a5b1955f75622', '2010-05-05 00:00:00', '2020-09-10 10:59:12', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 17, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '57e7a872e6957898da2381e512fa52c2', '2010-05-05 00:00:00', '2020-09-10 11:49:27', NULL, '0:0:0:0:0:0:0:1', 'I', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (0, 18, 'snowflake-service.yaml', 'DEFAULT_GROUP', '', 'server.port: ${zy-micro-services.ports.snowflake-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.snowflake-service:sys}', 'e3d0d1d23f7e9881c5a6c10cf96f6c95', '2010-05-05 00:00:00', '2020-09-10 11:51:18', NULL, '0:0:0:0:0:0:0:1', 'I', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (16, 19, 'snowflake-service.yaml', 'DEFAULT_GROUP', '', 'server.port: ${zy-micro-services.ports.snowflake-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.snowflake-service:sys}', 'e3d0d1d23f7e9881c5a6c10cf96f6c95', '2010-05-05 00:00:00', '2020-09-10 14:03:01', NULL, '0:0:0:0:0:0:0:1', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (16, 20, 'snowflake-service.yaml', 'DEFAULT_GROUP', '', 'server.port: 8201\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://localhost:3306/snowflake?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root', 'a5c98d9034c5a1bf9147defd58a0e0c3', '2010-05-05 00:00:00', '2020-09-10 14:11:08', NULL, '0:0:0:0:0:0:0:1', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (16, 21, 'snowflake-service.yaml', 'DEFAULT_GROUP', '', 'server.port: 8201\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://localhost:3306/snowflake?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}', '33b4349156bb8abb22a1cd71c3be25b8', '2010-05-05 00:00:00', '2020-09-10 14:13:44', NULL, '0:0:0:0:0:0:0:1', 'U', '89357605-6ea1-4627-a85b-4c2069d96474');
INSERT INTO `his_config_info` VALUES (11, 22, 'application.yaml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '57e7a872e6957898da2381e512fa52c2', '2010-05-05 00:00:00', '2020-09-10 15:44:51', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (14, 23, 'api-gateway-local.yaml', 'DEFAULT_GROUP', '', 'server:\r\n  port: ${zy-micro-services.ports.api-gateway:8999}\r\n\r\nspring:\r\n  cloud:\r\n    gateway:\r\n\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lower-case-service-id: true #使用小写service-id\r\n      routes: #配置路由路径\r\n      - id: mall-auth\r\n        uri: lb://mall-auth\r\n        predicates:\r\n          - Path=/mall-auth/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-admin\r\n        uri: lb://mall-admin\r\n        predicates:\r\n          - Path=/mall-admin/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-portal\r\n        uri: lb://mall-portal\r\n        predicates:\r\n          - Path=/mall-portal/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-search\r\n        uri: lb://mall-search\r\n        predicates:\r\n          - Path=/mall-search/**\r\n        filters:\r\n          - StripPrefix=1\r\n      - id: mall-demo\r\n        uri: lb://mall-demo\r\n        predicates:\r\n          - Path=/mall-demo/**\r\n      filters:\r\n        - StripPrefix=1\r\n          # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route\r\n          default-filters:\r\n            # 重试\r\n              - name: Retry\r\n              args:\r\n                retries: 3\r\n                statuses: BAD_GATEWAY\r\n  security:\r\n    oauth2:\r\n      resourceserver:\r\n        jwt:\r\n          jwk-set-uri: \'http://localhost:8201/mall-auth/rsa/publicKey\' #配置RSA的公钥访问地址\r\n  redis:\r\n    database: 0\r\n    port: 6379\r\n    host: localhost\r\n    password:\r\nsecure:\r\n  ignore:\r\n    urls: #配置白名单路径\r\n      - \"/doc.html\"\r\n      - \"/swagger-resources/**\"\r\n      - \"/swagger/**\"\r\n      - \"/**/v2/api-docs\"\r\n      - \"/**/*.js\"\r\n      - \"/**/*.css\"\r\n      - \"/**/*.png\"\r\n      - \"/**/*.ico\"\r\n      - \"/webjars/springfox-swagger-ui/**\"\r\n      - \"/actuator/**\"\r\n      - \"/mall-auth/oauth/token\"\r\n      - \"/mall-auth/rsa/publicKey\"\r\n      - \"/mall-search/**\"\r\n      - \"/mall-portal/sso/**\"\r\n      - \"/mall-portal/home/**\"\r\n      - \"/mall-portal/product/**\"\r\n      - \"/mall-portal/brand/**\"\r\n      - \"/mall-admin/admin/login\"\r\n      - \"/mall-admin/admin/register\"\r\n      - \"/mall-admin/admin/info\"\r\n      - \"/mall-admin/minio/upload\"\r\nmanagement: #开启SpringBoot Admin的监控\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: always', '7d4d63dc463896c3d45a5b1955f75622', '2010-05-05 00:00:00', '2020-09-10 15:44:51', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 24, 'nacos-config-share.yml', 'DEFAULT_GROUP', '', 'server:\r\n    port: 9984\r\nnacos: \r\n    share: nacos-config-share', '3a18af89d318d7d0bbf72a40d2647c0b', '2010-05-05 00:00:00', '2020-09-10 15:45:32', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 25, 'shareconfig1.yml', 'DEFAULT_GROUP', '', 'share: \r\n    config1: 这里是共享配置文件1', 'ac865378c0aee78ede586c534b22ee79', '2010-05-05 00:00:00', '2020-09-10 15:46:34', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 26, 'shareconfig2.yml', 'DEFAULT_GROUP', '', 'share: \r\n    config2: 这里是共享配置文件2', '64f9a1e846efe9f906cb6b61412593da', '2010-05-05 00:00:00', '2020-09-10 15:47:01', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 27, 'shareconfig3.yml', 'SHARE3_GROUP', '', 'share: \r\n    config3: 这里是共享配置文件3，Group:SHARE3_GROUP', 'de7f42cee45439795d5b8f259bbbd561', '2010-05-05 00:00:00', '2020-09-10 15:47:46', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 28, 'shareconfig4.yml', 'SHARE4_GROUP', '', 'share: \r\n    config4: 这里是共享配置文件4，Group:SHARE4_GROUP', 'a3b6d008b31c50c80f4d5e0d2d3c9bde', '2010-05-05 00:00:00', '2020-09-10 15:48:15', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 29, 'demo-nacos-config-share.yml', 'DEFAULT_GROUP', '', 'server:\r\n    port: 9984\r\nnacos: \r\n    share: nacos-config-share', '3a18af89d318d7d0bbf72a40d2647c0b', '2010-05-05 00:00:00', '2020-09-10 16:07:33', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 30, 'demo-nacos-config-share.yml', 'DEFAULT_GROUP', '', 'server:\r\n    port: 9984\r\nnacos: \r\n    share: nacos-config-share', '3a18af89d318d7d0bbf72a40d2647c0b', '2010-05-05 00:00:00', '2020-09-10 16:47:54', NULL, '0:0:0:0:0:0:0:1', 'I', '317fcfa2-5e10-438a-b220-a5de3b05862b');
INSERT INTO `his_config_info` VALUES (0, 31, 'application.yml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '57e7a872e6957898da2381e512fa52c2', '2010-05-05 00:00:00', '2020-09-18 11:25:12', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (25, 32, 'demo-nacos-config-share.yml', 'DEFAULT_GROUP', '', 'server:\r\n    port: 9984\r\nnacos: \r\n    share: nacos-config-share', '3a18af89d318d7d0bbf72a40d2647c0b', '2010-05-05 00:00:00', '2020-09-18 11:32:58', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (27, 33, 'application.yml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    springcloud-demo: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '57e7a872e6957898da2381e512fa52c2', '2010-05-05 00:00:00', '2020-09-18 11:33:15', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 34, 'application-local', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '0009f6267aa1bf00269277702376eaf1', '2010-05-05 00:00:00', '2020-09-18 11:53:25', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (30, 35, 'application-local', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '0009f6267aa1bf00269277702376eaf1', '2010-05-05 00:00:00', '2020-09-18 11:53:41', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (23, 36, 'shareconfig3.yml', 'SHARE3_GROUP', '', 'share: \r\n    config3: 这里是共享配置文件3，Group:SHARE3_GROUP', 'de7f42cee45439795d5b8f259bbbd561', '2010-05-05 00:00:00', '2020-09-18 11:53:50', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (24, 37, 'shareconfig4.yml', 'SHARE4_GROUP', '', 'share: \r\n    config4: 这里是共享配置文件4，Group:SHARE4_GROUP', 'a3b6d008b31c50c80f4d5e0d2d3c9bde', '2010-05-05 00:00:00', '2020-09-18 11:53:50', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 38, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '213ff1b2bc8d188c38dc48d57864b0e7', '2010-05-05 00:00:00', '2020-09-18 11:56:07', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 39, 'application-local.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '0009f6267aa1bf00269277702376eaf1', '2010-05-05 00:00:00', '2020-09-18 11:56:27', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 40, 'application-prod.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.sixi.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.sixi.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '70f37c22ce133e27500c0623c7fca409', '2010-05-05 00:00:00', '2020-09-18 11:56:44', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 41, 'application-test.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.sixi.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.sixi.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '70f37c22ce133e27500c0623c7fca409', '2010-05-05 00:00:00', '2020-09-18 11:57:09', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (21, 42, 'shareconfig1.yml', 'DEFAULT_GROUP', '', 'share: \r\n    config1: 这里是共享配置文件1', 'ac865378c0aee78ede586c534b22ee79', '2010-05-05 00:00:00', '2020-09-18 13:52:55', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (22, 43, 'shareconfig2.yml', 'DEFAULT_GROUP', '', 'share: \r\n    config2: 这里是共享配置文件2', '64f9a1e846efe9f906cb6b61412593da', '2010-05-05 00:00:00', '2020-09-18 13:52:55', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (31, 44, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '213ff1b2bc8d188c38dc48d57864b0e7', '2010-05-05 00:00:00', '2020-09-18 13:53:30', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (32, 45, 'application-local.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '0009f6267aa1bf00269277702376eaf1', '2010-05-05 00:00:00', '2020-09-18 13:53:43', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (27, 46, 'application.yml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'e3dc0f9420dfab4932963c46e06b6ba8', '2010-05-05 00:00:00', '2020-09-18 14:36:48', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (32, 47, 'application-local.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com\r\nnacos: local', 'fa1097d9196a61988a2c9a7ee781e4c0', '2010-05-05 00:00:00', '2020-09-18 14:37:26', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (31, 48, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com\r\nnacos: dev', 'd9c253c31770f1d389c4a4ec4cdcfa69', '2010-05-05 00:00:00', '2020-09-18 14:37:36', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (31, 49, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '213ff1b2bc8d188c38dc48d57864b0e7', '2010-05-05 00:00:00', '2020-09-18 15:03:26', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (32, 50, 'application-local.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${itzy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${itzy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '0009f6267aa1bf00269277702376eaf1', '2010-05-05 00:00:00', '2020-09-18 15:03:44', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (33, 51, 'application-prod.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.sixi.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.sixi.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '70f37c22ce133e27500c0623c7fca409', '2010-05-05 00:00:00', '2020-09-18 15:03:56', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (34, 52, 'application-test.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nitzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${itzy-micro-service.local}\r\n    eureka-service: ${itzy-micro-service.local}\r\n    config-service: ${itzy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.sixi.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.sixi.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${itzy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '70f37c22ce133e27500c0623c7fca409', '2010-05-05 00:00:00', '2020-09-18 15:04:09', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 53, 'snowflake-service.yml', 'DEFAULT_GROUP', '', 'server.port: ${zy-micro-services.ports.snowflake-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.snowflake-service:sys}', 'e3d0d1d23f7e9881c5a6c10cf96f6c95', '2010-05-05 00:00:00', '2020-09-18 15:12:38', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 54, 'demo-client-service.yml', 'DEFAULT_GROUP', '', 'server:\r\n    port: ${zy-micro-services.ports.demo-client-service:0}', '1bbcfd4c6ff2c039c8ba00f9a3239b98', '2010-05-05 00:00:00', '2020-09-22 11:11:54', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (27, 55, 'application.yml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'e3dc0f9420dfab4932963c46e06b6ba8', '2010-05-05 00:00:00', '2020-09-22 11:12:11', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 56, 'application.yml', 'common_config', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 10:36:26', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (46, 57, 'application.yml', 'common_config', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 10:36:48', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 58, 'application.yml', 'COMMON_CONFIG', 'alibaba', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 10:37:41', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 59, 'application-dev.yml', 'COMMON_CONFIG', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '593e04d985513d2f4a1d4695d8ccc8e3', '2010-05-05 00:00:00', '2020-09-28 10:39:46', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (47, 60, 'application.yml', 'COMMON_CONFIG', 'alibaba', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 10:40:01', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 61, 'application-local.yml', 'COMMON_CONFIG', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', 'e2741b3684e45ca261d155111664f18a', '2010-05-05 00:00:00', '2020-09-28 10:40:48', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (27, 62, 'application.yml', 'DEFAULT_GROUP', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 10:41:18', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (31, 63, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n## Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 2\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', '593e04d985513d2f4a1d4695d8ccc8e3', '2010-05-05 00:00:00', '2020-09-28 10:41:18', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (32, 64, 'application-local.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n# MySQL\r\nDB_HOST: ${zy-micro-service.local}\r\nDB_PASS: root\r\n# Redis\r\nREDIS_HOST: ${zy-micro-service.local}\r\nREDIS_DB: 1\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.sixi.com', 'e2741b3684e45ca261d155111664f18a', '2010-05-05 00:00:00', '2020-09-28 10:41:18', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (33, 65, 'application-prod.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.zy.com', 'a65f7f2812fa1289f912f6aa1c587533', '2010-05-05 00:00:00', '2020-09-28 10:41:18', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (34, 66, 'application-test.yml', 'DEFAULT_GROUP', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: test.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: test.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: test.mongodb.i.zy.com', '693297e3be1e77ae8c46dc2b23341547', '2010-05-05 00:00:00', '2020-09-28 10:41:18', NULL, '0:0:0:0:0:0:0:1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 67, 'application-prod.yml', 'COMMON_CONFIG', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: dev.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: dev.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: dev.mongodb.i.zy.com', 'a65f7f2812fa1289f912f6aa1c587533', '2010-05-05 00:00:00', '2020-09-28 10:41:55', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 68, 'application-test.yml', 'COMMON_CONFIG', '', '# 基础信息\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: ${zy-micro-service.local}\r\n## MySQL\r\n#DB_HOST: test.mysql.i.zy.com\r\n#DB_PASS: root\r\n## Redis\r\n#REDIS_HOST: test.redis.i.zy.com\r\n#REDIS_DB: 10\r\n#RabbitMQ\r\nRABBITMQ_HOST: ${zy-micro-service.local}\r\n# MongoDB\r\n#MONGODB_HOST: test.mongodb.i.zy.com', '693297e3be1e77ae8c46dc2b23341547', '2010-05-05 00:00:00', '2020-09-28 10:42:17', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (47, 69, 'application.yml', 'COMMON_CONFIG', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-gateway: 8080\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-gateway: gateway\r\n  ports:\r\n    api-gateway: 8080\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-gateway}:${zy-micro-service.ports.api-gateway}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', 'b94466bc7091885c0104cd2c2fb72121', '2010-05-05 00:00:00', '2020-09-28 11:50:52', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 70, 'api-zuul.yml', 'DEFAULT_GROUP', '', 'server:\r\n  port: 8080\r\n\r\nzuul:\r\n  # 添加代理的相关头信息\r\n  add-proxy-headers: true\r\n  # 代理时需要过滤的Header头 默认值为: \"Cookie\", \"Set-Cookie\", \"Authorization\"\r\n  # 留空代表传递所有的头\r\n  sensitive-headers:\r\n# security:\r\n#   oauth2:\r\n#     client:\r\n#       access-token-uri: http://${sixi-micro-service.hosts.api-gateway}:${sixi-micro-service.ports.api-gateway}/auth/oauth/token\r\n#       user-authorization-uri: http://${sixi-micro-service.hosts.api-gateway}:${sixi-micro-service.ports.api-gateway}/auth/oauth/authorize\r\n#       client-id: client\r\n#       client-secret: secret\r\n#     resource:\r\n#       token-info-uri:  http://${sixi-micro-service.hosts.oauth-service}:${sixi-micro-service.ports.oauth-service}/oauth/check_token\r\nfallback:\r\n  message: \'{\"status\":503, \"msg\":\"服务暂时不可用 请稍候重试!\"}\'', 'bf30b50e28cf8c933e4d2a55c374387c', '2010-05-05 00:00:00', '2020-09-28 11:53:38', NULL, '0:0:0:0:0:0:0:1', 'I', '');
INSERT INTO `his_config_info` VALUES (47, 71, 'application.yml', 'COMMON_CONFIG', '', 'zy-micro-services:\r\n  # 端口号\r\n  ports:\r\n    # 核心服务\r\n    api-zuul: 8080\r\n    discovery-service: 8081\r\n    config-service: 8082\r\n    #路由服务\r\n    core-route-service: 8101\r\n    gateway-market-service: 8102\r\n    gateway-service: 8103\r\n    #kits服务\r\n    snowflake-service: 8201\r\n    #demo\r\n    demo-nacos-config-share: 9001\r\n    demo-client-service: 9002\r\n  # 数据库\r\n  database:\r\n    core-route-service: core_route\r\n    snowflake-service: snowflake\r\n\r\n##############################\r\n# 以下为微服务公用配置 请勿修改\r\n##############################\r\n# 微服务基础配置\r\nzy-micro-service:\r\n  local: localhost\r\n  hosts:\r\n    api-zuul: gateway\r\n    discovery-service: discovery\r\n    config-service: config\r\n  ports:\r\n    api-zuul: 8080\r\n    discovery-service: 8081\r\n    config-service: 8082\r\n  url: ${ZY_MICRO_SERVICE_URL:http://${zy-micro-service.hosts.api-zuul}:${zy-micro-service.ports.api-zuul}}\r\n\r\n# 微服务公共配置\r\nzy-micro-service-common:\r\n  web-mvc-configurer:\r\n    enabled: true\r\n  redis:\r\n    fast-json-serializer: ${ZY_MICRO_SERVICE_COMMON_REDIS_FAST_JSON_SERIALIZER:true}\r\n  feign:\r\n    debug: ${ZY_MICRO_SERVICE_COMMON_FEIGN_DEBUG:false}\r\n    proxy:\r\n      enabled: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_ENABLED:true}\r\n      header: ${ZY_MICRO_SERVICE_COMMON_FEIGN_PROXY_HEADER:Cookie,Authorization}\r\n  session:\r\n    create:\r\n      policy: ${ZY_MICRO_SERVICE_COMMON_SESSION_CREATION_POLICY:STATELESS}\r\n  message:\r\n    no-login: \"用户未登录!\"\r\n    no-permission: \"您没有权限访问此接口!\"\r\n  open:\r\n    url: \'https://test.open.zy.com/api\'\r\n  tokenmanager:\r\n    url: \'https://api.zy.com/common-tokenmanager-service\'\r\n  oauth:\r\n    url: \'https://test-oauth.cloud.zy.com\'\r\n    #旧版oauth\r\n    loginPage: \'/login.html\'\r\n    #新版oauth\r\n    loginPages: \'/logins.html\'\r\n  logging:\r\n    routing-key: ${ZY_MICRO_SERVICE_COMMON_LOGGING_ROUTING_KEY:logs}\r\n\r\n# 默认端口配置\r\nserver.port: ${ENV_PORT:${PORT:0}}\r\n\r\n# Ribbon相关配置\r\nribbon:\r\n  ReadTimeout: ${RIBBON_READTIMEOUT:30000}\r\n  SocketTimeout: ${RIBBON_SOCKETTIMEOUT:30000}\r\n  ConnectTimeout: ${RIBBON_CONNECTTIMEOUT:5000}\r\n  # 关闭httpClient\r\n  http:\r\n    client:\r\n      enabled: ${RIBBON_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${RIBBON_OKHTTP_ENABLED:true}\r\n# Feign相关配置\r\nfeign:\r\n  # 关闭httpClient\r\n  httpclient:\r\n    enabled: ${FEIGN_HTTPCLIENT_ENABLED:false}\r\n  okhttp:\r\n    enabled: ${FEIGN_OKHTTP_ENABLED:true}\r\n  # 启用 hystrix\r\n  hystrix:\r\n    enabled: ${FEIGN_HYSTRIX_ENABLED:false}\r\n# 管理端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        # 开启所有端点\r\n        include:\r\n          - \"*\"\r\n  endpoint:\r\n    shutdown:\r\n      # 开启 Shutdown 端点\r\n      enabled: true\r\n  info:\r\n    git:\r\n      # 显示完整的GIT信息\r\n      mode: FULL\r\n# 通用的应用配置\r\nspring:\r\n  session:\r\n    store-type: ${SPRING_SESSION_STORE_TYPE:none}\r\n  servlet:\r\n    # 上传大小配置\r\n    multipart:\r\n      max-file-size: 30MB\r\n      max-request-size: 30MB\r\n  # Http请求相关配置\r\n  http:\r\n    # 编码配置\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n  # 默认的数据库配置\r\n  datasource:\r\n    name: ${ENV_DB_NAME:${DB_NAME:sys}}\r\n    host: ${ENV_DB_HOST:${DB_HOST:${zy-micro-service.local}}}\r\n    #type: org.apache.tomcat.jdbc.pool.DataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    second-url: ${ENV_DB_URL:${DB_URL:jdbc:mysql://${spring.datasource.host}/${spring.datasource.second.name}?serverTimezone=Asia%2FShanghai&characterEncoding=utf8&allowMultiQueries=true&useSSL=false}}\r\n    username: ${ENV_DB_USER:${DB_USER:root}}\r\n    password: ${ENV_DB_PASS:${DB_PASS:root}}\r\n    hikari:\r\n      minimum-idle: 20\r\n      maximum-pool-size: 500\r\n  data:\r\n    # 默认的Mongodb服务器\r\n    mongodb:\r\n      database: ${ENV_MONGODB_NAME:${MONGODB_NAME:test}}\r\n      host: ${ENV_MONGODB_HOST:${MONGODB_HOST:${zy-micro-service.local}}}\r\n      port: ${ENV_MONGODB_PORT:${MONGODB_PORT:27017}}\r\n  # 默认的Redis服务器 存储公共信息\r\n  redis:\r\n    database: ${ENV_REDIS_DB:${REDIS_DB:0}}\r\n    host: ${ENV_REDIS_HOST:${REDIS_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_REDIS_PORT:${REDIS_PORT:6379}}\r\n    # 默认的RabbitMQ服务器\r\n  rabbitmq:\r\n    host: ${ENV_RABBITMQ_HOST:${RABBITMQ_HOST:${zy-micro-service.local}}}\r\n    port: ${ENV_RABBITMQ_PORT:${RABBITMQ_PORT:5672}}\r\n    username: ${ENV_RABBITMQ_USER:${RABBITMQ_USER:guest}}\r\n    password: ${ENV_RABBITMQ_PASS:${RABBITMQ_PASS:guest}}\r\n    listener:\r\n      simple:\r\n        concurrency: ${RABBITMQ_LISTENER_CONCURRENCY:500}\r\n        max-concurrency: ${RABBITMQ_LISTENER_MAX_CONCURRENCY:1000}\r\n        acknowledge-mode: ${RABBITMQ_LISTENER_ACKNOWLEDGE_MODE:MANUAL}\r\n  cloud:\r\n    stream:\r\n      default:\r\n        consumer:\r\n          concurrency: ${SPRING_CLOUD_STREAM_DEFAULT_CONSUMER_CONCURRENCY:200}\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${SPRING_CLOUD_NACOS_URI:http://localhost:8848}\r\ninfo:\r\n  app:\r\n    name: ${spring.application.name}\r\n  company:\r\n    name: zy\r\n#logging.config: ${ENV_LOGGING_CONFIG:${LOGGING_CONFIG:classpath:logback-rabbitmq-spring.xml}}', '04b003caabde60ef53c1a2f3baf3a871', '2010-05-05 00:00:00', '2020-09-28 14:28:01', NULL, '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 72, 'gateway-route-service.yml', 'DEFAULT_GROUP', '', 'server.port: ${zy-micro-services.ports.gateway-route-service:0}\r\nspring.datasource.name: ${zy-micro-services.database.gateway-route-service:sys}', '84e01bb55ed4afd4e269f810286d4eca', '2010-05-05 00:00:00', '2020-09-28 14:28:35', NULL, '0:0:0:0:0:0:0:1', 'I', '');

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  `role` varchar(50) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL
) ENGINE = InnoDB CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', '89357605-6ea1-4627-a85b-4c2069d96474', 'alibaba(local)', '阿里巴巴微服务本地环境', 'nacos', 1599525959604, 1599525959604);
INSERT INTO `tenant_info` VALUES (2, '1', '317fcfa2-5e10-438a-b220-a5de3b05862b', 'alibaba(dev)', '阿里巴巴微服务开发环境', 'nacos', 1599525983039, 1599525983039);
INSERT INTO `tenant_info` VALUES (3, '1', 'bd5be54f-ccbf-4301-916c-54af05d838ec', 'alibaba(prod)', '阿里巴巴微服务线上环境', 'nacos', 1599526007081, 1599526007081);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  `password` varchar(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
